name: Upstream Sync and Create Release

permissions:
  contents: write
  issues: write
  actions: write

on:
  schedule:
    - cron: '0 */6 * * *' # every 6 hour
  workflow_dispatch:

jobs:
  sync_latest_from_upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork }}

    steps:
      - uses: actions/checkout@v4

      - name: Clean issue notice
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issues'
          labels: '🚨 Sync Fail'

      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          upstream_sync_repo: Lakr233/NotchDrop
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }} # automatically generated, no need to set
          test_mode: false

      - name: Sync check
        if: failure()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-issue'
          title: '🚨 同步失败 | Sync Fail'
          labels: '🚨 Sync Fail'
          body: |
            由于上游仓库的 workflow 文件变更，导致 GitHub 自动暂停了本次自动更新，你需要手动 Sync Fork 一次

  check_tags:
    name: Check Tags and Create Release
    runs-on: ubuntu-latest
    needs: sync_latest_from_upstream

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "Zach"
          git config --global user.email "i@ssstttar.com"

      - name: Fetch local tags
        run: |
          git fetch --tags

      - name: Fetch all tags from upstream in temporary directory
        run: |
          mkdir temp_upstream_repo
          cd temp_upstream_repo
          git init
          git remote add upstream https://github.com/Lakr233/NotchDrop
          git fetch upstream --tags
          latest_upstream_tag=$(git ls-remote --tags upstream | grep -v "AAPL" | awk -F'/' '{print $3}' | grep -v '{}$' | sort -V | tail -n 1)
          echo "Latest upstream tag: $latest_upstream_tag"
          echo latest_upstream_tag=$latest_upstream_tag >> $GITHUB_ENV
          cd ..

      - name: Get latest local tag
        run: |
          latest_local_tag=$(git tag --list | grep -v "AAPL" | sort -V | tail -n 1)
          echo "Latest local tag: $latest_local_tag"
          echo latest_local_tag=$latest_local_tag >> $GITHUB_ENV

      - name: Compare tags
        id: check_tags
        run: |
          if [ "$latest_local_tag" != "$latest_upstream_tag" ]; then
            echo "new_release=true" >> $GITHUB_ENV
          else
            echo "new_release=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        if: env.new_release == 'true'
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ env.latest_upstream_tag }}
          name: ${{ env.latest_upstream_tag }}
          body: 'Automated release for tag ${{ env.latest_upstream_tag }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Build Workflow
        if: env.new_release == 'true'
        run: |
          curl -X POST -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Zach677/NotchDrop/dispatches \
          -d '{"event_type":"release_created"}'
