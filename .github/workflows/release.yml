name: Sync Upstream and Release

permissions:
  contents: write
  issues: write
  actions: write

on:
  schedule:
    - cron: '0 */6 * * *' # every 6 hours
  workflow_dispatch:

jobs:
  sync_upstream:
    name: Sync Upstream Repository
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Clean Sync Fail Issues
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issues'
          labels: 'ðŸš¨ Sync Fail'

      - name: Sync Upstream Changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          upstream_sync_repo: Lakr233/NotchDrop
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          test_mode: false

      - name: Create Sync Fail Issue
        if: failure()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-issue'
          title: 'ðŸš¨ Sync Failed'
          labels: 'ðŸš¨ Sync Fail'
          body: |
            Automatic update was suspended due to changes in the upstream repository's workflow file. Manual Sync Fork is required.

  create_release:
    name: Check Tags and Create Release
    runs-on: ubuntu-latest
    needs: sync_upstream

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "Zach"
          git config --global user.email "i@ssstttar.com"

      - name: Fetch Local Tags
        run: git fetch --tags

      - name: Fetch Upstream Tags
        run: |
          mkdir temp_upstream
          cd temp_upstream
          git init
          git remote add upstream https://github.com/Lakr233/NotchDrop
          git fetch upstream --tags
          LATEST_UPSTREAM_TAG=$(git ls-remote --tags upstream | grep -v "AAPL" | awk -F'/' '{print $3}' | grep -v '{}$' | sort -V | tail -n 1)
          echo "LATEST_UPSTREAM_TAG=${LATEST_UPSTREAM_TAG}" >> $GITHUB_ENV
          cd ..

      - name: Get Latest Local Tag
        run: |
          LATEST_LOCAL_TAG=$(git tag --list | grep -v "AAPL" | sort -V | tail -n 1)
          echo "LATEST_LOCAL_TAG=${LATEST_LOCAL_TAG}" >> $GITHUB_ENV

      - name: Compare Tags
        id: compare_tags
        run: |
          if [ "$LATEST_LOCAL_TAG" != "$LATEST_UPSTREAM_TAG" ]; then
            echo "NEW_RELEASE=true" >> $GITHUB_ENV
          else
            echo "NEW_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        if: env.NEW_RELEASE == 'true'
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ env.LATEST_UPSTREAM_TAG }}
          name: ${{ env.LATEST_UPSTREAM_TAG }}
          body: 'Automated release for tag ${{ env.LATEST_UPSTREAM_TAG }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Build Workflow
        if: env.NEW_RELEASE == 'true'
        run: |
          curl -X POST -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Zach677/NotchDrop/dispatches \
          -d '{"event_type":"release_created"}'
